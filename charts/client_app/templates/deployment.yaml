apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
    spec:
      containers:
      - name: {{ .Release.Name }}
        image: {{ .Values.image }}
        resources:
          requests:
            memory: 20Mi
            cpu: 20m
          limits:
            memory: 100Mi
            cpu: 500m
        ports:
        - name: http
          containerPort: 80
        envFrom:
          - secretRef:
              name: {{ .Release.Name }}-env
        livenessProbe:
          httpGet:
            path: /?liveness
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /?readiness
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
        startupProbe:
          httpGet:
            path: /?startup
            port: http
          failureThreshold: 20
          periodSeconds: 5
      - name: {{ .Release.Name }}-prometheus-exporter
        image: "nginx/nginx-prometheus-exporter:0.11"
        args:
          - "-nginx.scrape-uri=http://localhost:8033/stub_status"
        resources:
          requests:
            memory: 20Mi
            cpu: 20m
          limits:
            memory: 100Mi
            cpu: 500m
        ports:
          - name: metrics
            containerPort: 9113
        livenessProbe:
          httpGet:
            path: /
            port: metrics
          initialDelaySeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: metrics
          initialDelaySeconds: 30
          timeoutSeconds: 10